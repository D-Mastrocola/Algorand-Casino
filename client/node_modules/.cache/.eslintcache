[{"C:\\Users\\User\\Algorand-Casino\\client\\src\\index.js":"1","C:\\Users\\User\\Algorand-Casino\\client\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Algorand-Casino\\client\\src\\App.js":"3","C:\\Users\\User\\Algorand-Casino\\client\\src\\pages\\Home.jsx":"4","C:\\Users\\User\\Algorand-Casino\\client\\src\\pages\\components\\header\\Header.jsx":"5","C:\\Users\\User\\Algorand-Casino\\client\\src\\pages\\components\\artwork\\Artwork.jsx":"6"},{"size":552,"mtime":1674598537237,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1674598537243,"results":"9","hashOfConfig":"8"},{"size":279,"mtime":1674598537235,"results":"10","hashOfConfig":"8"},{"size":1071,"mtime":1674598931650,"results":"11","hashOfConfig":"8"},{"size":2112,"mtime":1674598537242,"results":"12","hashOfConfig":"8"},{"size":439,"mtime":1674598950845,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fp7wyb",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"C:\\Users\\User\\Algorand-Casino\\client\\src\\index.js",[],[],"C:\\Users\\User\\Algorand-Casino\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\User\\Algorand-Casino\\client\\src\\App.js",["35"],[],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport Header from './pages/components/header/Header';\r\nimport Home from './pages/Home';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header/>\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\User\\Algorand-Casino\\client\\src\\pages\\Home.jsx",[],[],"C:\\Users\\User\\Algorand-Casino\\client\\src\\pages\\components\\header\\Header.jsx",["36"],[],"import { Component } from \"react\";\r\nimport MyAlgo from \"@randlabs/myalgo-connect\";\r\n\r\nconst myAlgoWallet = new MyAlgo();\r\n\r\n/*const { MyAlgoWallet } = require(\"@randlabs/myalgo-connect\");\r\n\r\nconst algosdk = require(\"algosdk\");\r\n\r\nconst token = {\r\n  \"X-API-Key\": \"dNKutsYJR97M3WUuTeDMJ4EmYJpR1UhI1UhAi4Uo\",\r\n};\r\nconst server = \"https://testnet-algorand.api.purestake.io/ps2\";\r\nconst port = \"\";*/\r\n\r\n//const algodClient = new algosdk.Algodv2(token, server, port);\r\n\r\nlet secretKey =\r\n  \"rally umbrella garlic shiver medal embrace regret foam reject select custom dress just crazy benefit announce busy unable cereal head valve educate ride absorb regret\";\r\n/*let recoveredAccount = algosdk.mnemonicToSecretKey(secretKey);\r\n\r\nlet account_info = \"\";\r\nlet acct_string = \"\";*/\r\n\r\n/*(async () => {\r\n  account_info =\r\n    acct_string = JSON.stringify(account_info);\r\n  console.log(\"Account Info: \" + acct_string);\r\n  this.setState({ account_info: (await algodClient.accountInformation(recoveredAccount.addr).do()) })\r\n})().catch(e => {\r\n  console.log(e)\r\n});*/\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      connected: \"Connect Wallet\",\r\n    };\r\n  }\r\n  connectWallet() {\r\n    console.log(\"connect\");\r\n    let getAPIResponse = async () => {\r\n      try {\r\n        const accounts = await myAlgoWallet.connect();\r\n\r\n        const addresses = accounts.map((account) => account.address);\r\n        console.log(addresses);\r\n        this.setState({\r\n          connected: addresses[0],\r\n        });\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n    getAPIResponse();\r\n  }\r\n  render() {\r\n    return (\r\n      <header className=\"bg-dark text-light col-12 d-flex justify-content-between align-items-center px-4 border border-2 border-secondary border-top-0 border-start-0 border-end-0 \">\r\n        <h1>Mastrocola.io</h1>\r\n        <button\r\n          className=\"btn btn-warning fs-5\"\r\n          onClick={() => this.connectWallet()}\r\n        >\r\n          {this.state.connected}\r\n        </button>\r\n      </header>\r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","C:\\Users\\User\\Algorand-Casino\\client\\src\\pages\\components\\artwork\\Artwork.jsx",["37","38"],[],"import { Component } from \"react\";\r\n\r\nclass Artwork extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      connected: \"Connect Wallet\",\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <article className=\"col m-3\">\r\n        <img src=\"/images/test_nft.jfif\" style={{ maxWidth: \"100%\" }} />\r\n        <h3>\r\n          <a>Test NFT</a>\r\n        </h3>\r\n      </article>\r\n    );\r\n  }\r\n}\r\nexport default Artwork;\r\n",{"ruleId":"39","severity":1,"message":"40","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":12},{"ruleId":"39","severity":1,"message":"43","line":18,"column":5,"nodeType":"41","messageId":"42","endLine":18,"endColumn":14},{"ruleId":"44","severity":1,"message":"45","line":13,"column":9,"nodeType":"46","endLine":13,"endColumn":73},{"ruleId":"47","severity":1,"message":"48","line":15,"column":11,"nodeType":"46","endLine":15,"endColumn":14},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'secretKey' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md"]